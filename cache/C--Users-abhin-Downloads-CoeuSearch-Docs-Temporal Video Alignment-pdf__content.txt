Temporal Video Alignment Based Integrating Multiple Features Adaptive Weighting Taiki Sato , Yutaka Shimada , Yukinobu Taniguchi Tokyo University Science , Graduate School Engineering , Japan Abstract—This paper proposes method establishing temporal correspondence two different videos manufacturing processes enable visual comparison work progress support transfer expertise skills . extract two features work objects hand motions workers videos align two videos integrating features . integrating features , propose method adaptively weights two features obtain distance frames . Using pairs videos PC assembly cooking tasks , show method offers better frame-by-frame alignment accuracy methods employ feature separately . Keywords—Video alignment , Feature integration , SIFT , DP matching . INTRODUCTION Given rapid advance globalization recent years , key research goal develop tools assist transfer expertise skills experts non-experts speak different languages . Watching videos experts novices one basic non-verbal approaches acquiring skills avoiding problems . However , easy non-experts identify differences actions experts non-experts watching videos . differences easily discovered watching tasks , much time needed find scenes . paper introduces imaging tool support acquisition expertise skills proposes method temporally aligning multiple videos manufacturing process ( Fig.  ) . video alignment problem studied several fields . Higuchi et al . [   ] proposed alignment method based hand motion workers ; establishes frame-by-frame correspondence two different videos captured head mounted cameras . establish correspondence , use DP ( Dynamic Programming ) matching algorithm [   ] . Lu et al . [   ] also proposed motion based video alignment method uses trajectories objects interest using tracking method . Gupta et al . [   ] focused human motion proposed temporal alignment method aligns query video human motion capture sequence . Papazoglou et al . [   ] proposed object-appearance-based video alignment method . approach , object images viewpoint detected using convolutional neural network , thus achieving frame-by-frame temporal alignment . Kappeler et al . [   ] proposed video copy detection method using improved    - -    -    - /  / $   .   ©     IEEE Fig .   : Conceptual diagram video alignment method . aim finding scenes common tasks two different videos different workers performing manufacturing process . DP matching algorithm reduces run-time alignment saves memory . method align two copies video , one partially altered compression , insertion extra-scenes , overlaid captions , deletion scenes . Bojanowski et al . [   ] proposed video alignment method requires scene video tagged text data representing scene content . paper , focus features obtained work objects , work objects direct indicators work performed many cases . propose temporal frame-by-frame alignment method correspondence two different videos without text data integrating features obtained work objects hand motions workers . Experiments show method accurately align videos methods use feature separately . establishes  II . RELATED WORK [   ] , trajectories feature points first extracted hand regions worker video using dense trajectories [   ] . , directions displacements calculated start end points extracted trajectory , histogram calculated frames video . Throughout paper , call histogram motion feature . two videos aligned frame frame sum inter-frame distances motion features minimized according DP matching algorithm . Unfortunately , method concentrates hand motion fails detect subtle differences hand motion . avoid problem also extracting features work objects .   III . PROPOSED METHOD proposed method establishes frame-by-frame temporal correspondence two videos integrating features extracted hand motion workers work objects . method consists following steps : ( ) Extract object motion features frame video . ( ii ) Integrate two features , compute inter-frame distances two videos . ( iii ) Establish frame-by-frame temporal correspondence two videos DP matching . Note track work objects trajectories similar trajectories obtained hand motions . extract static features work objects frame . Motion feature extraction . step ( ) , first extract motion features frame calculating trajectories feature points obtained hand regions [   ] . difference [   ] compute displacement vector using maximum norm trajectory . example , obtain displacement vector trajectory starting ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:    ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) th pixel ( cid:     ) -th frame , maximum norm ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) vector ( cid:    ) ( cid:    ) ( cid:    ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:    ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:    ) , ( cid:    ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) number feature points trajectory . obtain motion feature ( cid:     ) -th frame , gather trajectories passing ( cid:     ) -th frame generate motion feature displacement vectors ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:  ) ( cid:    ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:  ) ( cid:    ) ( cid:     ) ( cid:    ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) trajectories . Let ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) histogram , namely motion feature , ( cid:     ) -th frame , ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) number feature points ( cid:     ) -th frame , ( cid:     ) diagonal length frame , ( cid:     ) ( cid:     ) number bins , ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) sum norms displacement vectors whose angles horizontal axis included ( cid:     ) ( cid:    ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:    ) ( cid:     ) ( cid:     ) ( cid:     ) Object feature extraction . next extract object features work objects computing SIFT feature [   ] hand regions workers frame . hand regions workers extracted skin color detection . computing dictionaries visual words , obtain Bag-of-Features ( BoF ) representation frame video . Let ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:  ) ( cid:    ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:  ) ( cid:    ) ( cid:     ) ( cid:    ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) BoF histogram ( cid:     ) - ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) th frame , namely object feature , ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) number SIFT keypoints ( cid:     ) -th frame , ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) number ( cid:     ) -th visual words ( cid:     ) -th frame . ( cid:     ) ( cid:  ) ( cid:     ) ( cid:    ) ( cid:     ) ( cid:    ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) . ( cid:     ) ( cid:     ) ( cid:    ) ( cid:     ) ( cid:     ) ( cid:    ) Feature integration . step ( ii ) , integrate object feature motion feature allow determination distance , ( cid:     ) ( cid:  ) ( cid:  ) ( cid:     ) ( cid:     ) ( cid:    ) ( cid:     ) ( cid:     ) , ( cid:     ) -th frame video ( cid:     ) -th frame video B follows : ( cid:     ) ( cid:  ) ( cid:  ) ( cid:     ) ( cid:     ) ( cid:    ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:  ) ( cid:  ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:  ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:  ) ( cid:    ) ( cid:     ) ( cid:  ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:  ) (   ) ( cid:     ) ( cid:     ) ( cid:    ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:  ) ( cid:  ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:  ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:  ) ( cid:    ) ( cid:     ) ( cid:  ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:  ) ( cid:  ) weight , ( cid:     ) ( cid:   ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:   ) ( cid:     ) ( cid:     ) ( cid:     ) object ( cid:     ) ( cid:     ) ( cid:     ) motion features ( cid:     ) -th frame video ( cid:   ) ( cid:     ) ( cid:     ) ( cid:  ) ( cid:    ) ( cid:  ) ( cid:  ) ( cid:     ) respectively , ( cid:     ) ( cid:     ) ( cid:     ) ( cid:    ) ( cid:     ) ( cid:     ) ( cid:     ) Euclidean distance histograms ( cid:     ) ( cid:  ) ( cid:     ) ( cid:     ) whose sizes . step ( iii ) , DP matching algorithm used align two videos frame frame basis distance given (   ) . determine value weight ( cid:     ) ( cid:     ) ( cid:     ) ( cid:  ) ( cid:  ) (   ) , propose two ( cid:  ) ( cid:  ) ( cid:     ) ( cid:     ) strategies . first strategy , weight constant , ( cid:     ) ( cid:     ) ( cid:     ) pairs ( cid:     ) ( cid:     ) . case , train weight ( cid:     ) using training data maximize accuracy alignment . second strategy , frame video , count number similar frames across video , neighboring frames feature space , determine value ( cid:  ) ( cid:  ) . second strategy comes idea weight ( cid:     ) ( cid:     ) ( cid:     ) number neighbors ( cid:     ) -th frame large , frame likely cause confusion look neighbors video , many false neighbors ( cid:  ) ( cid:  ) . Let frame . use idea determining weight ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:   ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:  ) ( cid:    ) ( cid:  ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:   ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:  ) ( cid:    ) ( cid:     ) ( cid:   ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:    ) ( cid:    ) ( cid:     ) ( cid:    ) ( cid:     ) ( cid:   ) ( cid:     ) set ( cid:     ) -neighbors ( cid:     ) -th frame video X calculated distance motion features , ( cid:     ) ( cid:   ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:  ) ( cid:    ) ( cid:  ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:   ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:  ) ( cid:    ) ( cid:     ) ( cid:   ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:    ) ( cid:    ) ( cid:     ) ( cid:    ) ( cid:     ) ( cid:   ) ( cid:     ) calculated distance object features , ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) thresholds ( cid:     ) ( cid:   ) total number frames video ( cid:   ) ( cid:     ) ( cid:     ) ( cid:  ) ( cid:    ) ( cid:  ) ( cid:  ) ( cid:     ) . calculate ( cid:     ) ( cid:   ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:   ) ( cid:     ) ( cid:     ) ( cid:     ) , frames excluded , distance ( cid:     ) ( cid:     ) temporally neighboring frames likely short frames true nearest neighbors ( cid:     ) -th frame . Let ( cid:     ) ( cid:     ) ( cid:   ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:   ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) number elements ( cid:     ) ( cid:   ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:   ) ( cid:     ) ( cid:     ) ( cid:     ) , respectively . Weight ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:  ) ( cid:  ) defined : ( cid:    ) ( cid:     ) ( cid:  ) ( cid:     ) ( cid:     ) ( cid:  ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:  ) ( cid:    ) ( cid:  ) ( cid:  ) ( cid:  ) ( cid:     ) ( cid:  ) ( cid:  ) ( cid:     ) ( cid:    ) ( cid:  ) ( cid:  ) ( cid:     ) ( cid:    ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:  ) ( cid:     ) ( cid:     ) ( cid:  ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:    ) ( cid:     ) ( cid:  ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:  ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:  ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:    ) ( cid:     ) ( cid:  ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:  ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:  ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:  ) ( cid:    ) ( cid:     ) Larger numbers ( cid:     ) -neighbors ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) B ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) measured object features trigger smaller values weight AB , means object features less effective . ( cid:     ) ( cid:     ) ( cid:     ) determine ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) applying Otsu thresholding method [    ] distance distributions ( cid:     ) ( cid:     ) ( cid:     ) ( cid:  ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:  ) ( cid:    ) ( cid:     ) ( cid:  ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:  ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:  ) ( cid:    ) ( cid:     ) ( cid:  ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) . IV . EXPERIMENTAL CONDITIONS ( cid:  ) conducted experiments evaluate performance video alignment method . ( cid:  ) Datasets . experiments , evaluated methods two datasets . One holds videos assembly tower PC , using camera installed work space ( see Fig .   TABLE   ( ) details ) . , salad dataset [    ] , holds videos people making salad taken using camera installed cooking space . TABLE   ( b ) shows details cooking task . paper , assume pair videos show order work . case PC assembly videos , order tasks TABLE   ( ) , order tasks cooking videos differs order shown TABLE   ( b ) . cooking  Fig .   : Examples frames video PC manufacturing tasks . ( ) Opening PC case . ( b ) Inserting HDD . ( c ) Screwing HDD PC case . ( ) Inserting memory . TABLE   : List working tasks ( ) PC manufacturing tasks Removing screws case Opening PC case Inserting HDD Screwing HDD PC case Plugging cable HDD Inserting memory Closing PC case Screwing PC case                 ( b ) salad cooking tasks               Preparation Cut cabbage Cut cheese Cut cucumber Cut tomato Serve dish cooking Fig .   : values alignment errors versus weight ( cid:     ) . ( cid:     ) ( cid:    ) ( cid:    ) . ( cid:     ) ( cid:  ) ( cid:     ) ( cid:     ) video case , order tasks classified three types : ( )   ( cid:     )   ( cid:     )   ( cid:     )   ( cid:     )   ( cid:     )   ( cid:     )   , ( ii )   ( cid:     )   ( cid:     )   ( cid:     )   ( cid:     )   ( cid:     )   ( cid:     )   , ( iii )   ( cid:     )   ( cid:     )   ( cid:     )   ( cid:     )   ( cid:     )   ( cid:     )   , numbers correspond TABLE   ( b ) . number videos type ( ) , ( ii ) ( iii )   ,     , respectively . experiments , choose pair two videos belong type , thus maximum number pairs cooking videos ( cid:  ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:  ) ( cid:     ) ( cid:     ) ( cid:  ) Evaluation procedures . compare performance alignment method methods use object motion features separately . experiments , set parameter r    % total number frames video , number visual words BoF , ( cid:     ) ( cid:     ) ,     , number bins motion feature ( cid:     ) ( cid:     )   . case PC assembly videos , number videos    ,   videos training data rest used evaluate performance method . Video length   -   minutes . case cooking videos , number videos   ,   videos used evaluate performance method . training data used PC assembly tasks . videos encoded frame rate  fps . ( cid:   ) ground truth , namely starting time ( cid:     ) - ( cid:  ) Let ( cid:     ) ( cid:     ) th work task video X ( ( cid:     ) ( cid:     ) ( cid:    ) ( cid:    ) ( cid:     ) ( cid:    ) ( cid:     ) ) , ( cid:     ) total ( cid:  ) -th frame number tasks type video . ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) -th frame video B , estimate video matched ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) work task ( cid:     ) started time ( cid:     ) ( cid:     ) . alignment error ( cid:     ) ( cid:     ) ( cid:     ) ( cid:    ) ( cid:     ) ( cid:     ) ( cid:     ) . experiments , calculate defined : ( cid:     ) ( cid:     ) ( cid:     ) alignment errors pairs test videos , namely ( cid:  ) ( cid:     ) ( cid:     ) patterns . repeated procedure    times randomly reclassifying    videos training testing videos , alignment accuracy evaluated average ( cid:     ) ( cid:    ) ( cid:    ) alignment errors cases PC assembly videos ( cid:  ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:    ) ( cid:    ) alignment errors ( cid:     ) ( cid:  ) ( cid:     ) ( cid:     ) cooking videos . baseline , adopted linear alignment method simply estimates starting time ( cid:     ) , assume ( cid:     ) ( cid:     ) work task ( cid:     ) ( cid:     ) ( cid:     ) experts ’ video B non-experts ’ video . ( cid:     ) ( cid:  ) ( cid:     ) ( cid:  ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:  ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:  ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) ( cid:     ) Fig .   : Average values alignment errors case ( ) PC manufacturing tasks , ( b ) salad dataset [    ] . ( cid:  ) addition , also compared method dense trajectories [   ] , technique uses four types descriptors , trajectories , HOG , HOF MBH , obtained along trajectories extracted hand regions workers . computing dictionaries     visual words features separately , obtained BoF representations feature concatenated BoF representations frame videos . ( cid:  ) method fixed weighting , set weight ( cid:     ) using training videos , alignment error minimized . order find weight ( cid:     ) , value w changed      .   increments . ( cid:  ) Fig .   shows average values alignment errors fixed value weight ( cid:     ) . Fig .   , value ( cid:     ) changed , average errors method fixed weighting range  .    seconds , implies method fixed weighting imperative adjust fixed weight ( cid:     ) . following assessments , fixed weight ( cid:     ) set  .  . V. RESULTS ( cid:  ) Fig .   shows average values alignment errors . shown Fig .   ( ) , case PC assembly videos , methods ( integrated object motion features ) lower average errors methods . also calculate average value alignment errors using dense trajectories . average value ,  .   sec , shows worst performance . mainly method detects     ( ) ( adaptive weighting ) ( b ) ( fixed weighting ) ( c ) object feature ( ) motion feature Fig .   : Example minimum cost path obtained DP matching algorithm . trajectories hand motions unsubtle , tends fail detect object features presence subtle hand motions , screwing plugging small parts . hand , method find object features even hand motions subtle . indicates using features obtained work objects highly effective offsetting hand motion detection failures . Fig .   ( ) , method fixed weighting slightly smaller average error adaptive weighting . However , difference slight , method adaptive weighting training free require weight ( cid:     ) optimized task camera configuration . reasons , method adaptive weighting effective aligning two different videos manufacturing process . ( cid:  ) Fig .   ( b ) shows results case cooking videos . low resolution cooking videos , object motion features fully extracted videos , average errors large methods . However , method adaptive weighting achieved lowest average error methods . hand , method motion feature yielded poor performance . One reason positions working objects individual videos , knives bowls , differs video video . irregular patterns positions working videos significantly degrade effectiveness motion feature : example , knife position switched left-hand side right-hand side , direction hand motion one video inverse direction video . case , motion based method work . hand , method adaptive weighting automatically determines feature effective integrates object motion features reasonable weighting . reason , method adaptive weighting shows superior performance . results experiments , method integrating object motion features useful effective temporal alignment method . ( cid:  ) Fig .   shows example distance matrixes whose ( cid:  ) ( cid:     ) ( cid:     ) ( cid:    ) ( cid:     ) ( cid:     ) th element distance ( cid:     ) -th frame video ( cid:     ) -th frame video B yielded methods tested . colors Fig .   show distances blue solid lines minimum cost paths obtained DP matching algorithm . Fig .   , paths deviate greatly ground truth ( green filled points ) starting time work task   , except method adaptive weighting . fixed weight ( cid:     ) set  .  , motion feature mainly impacted results method fixed weighting . reason , alignment results obtained method fixed weighting method used motion feature almost . hand , method adaptive weighting , minimum cost path overlapped ground truth object feature motion feature adaptively selected method . VI . CONCLUSION ( cid:  ) paper , proposed video alignment method establishes frame-by-frame correspondence two videos work process adaptively weighting object motion features . innovations study follows :   ) proposed video alignment method establishes temporal correspondence two different videos integrating object motion features ,   ) method higher performance methods use object motion feature ,   ) method training free ( cid:  ) ( cid:  ) adaptively based determine value weight ( cid:     ) ( cid:     ) ( cid:     ) neighboring frames feature space . Although assume videos demonstrate sequence work tasks , change task order might occur reality . Thus , aligning two different videos contain different task orders important future work . ACKNOWLEDGMENT ( cid:  ) work supported JSPS KAKENHI Grant Number JP  K      . REFERENCES [   ] K. Higuchi , R. Yonetani , Y. Sato , IEICE Technical Report , vol .     , .     , pp .  –   ,      ( Japanese ) . [   ] H. Sakoe S. Chiba , IEEE Transactions Acoustics , Speech , Signal Processing , vol .    , .   , pp .   –   ,      . [   ] C. Lu M. Mandal , IEEE Transactions Multimedia , vol .    , .   , pp .   –   ,      . [   ] A. Gupta , J . , J. Martinez , J. J . Little , R. J. Woodham , IEEE Winter Conference Applications Computer Vision , pp .  –  ,      . [   ] A. Papazoglou , L. Del Pero , V. Ferrari , Asian Conference Computer Vision , pp .    –    ,      . [   ] A. Kappeler , M. Iliadis , H. Wang , A. K. Katsaggelos , IEEE International Conference Image Processing , pp .     –     ,      . [   ] P. Bojanowski , R. Lajugie , E. Grave , F. Bach , I. Laptev , J. Ponce , C . Schmid , IEEE International Conference Computer Vision , pp.    –      ,      . [   ] H. Wang C. Schmid , IEEE International Conference Computer Vision , pp.    –     ,      . [   ] D. G. Lowe , IEEE International Conference Computer Vision , vol .   , pp.    –     ,      . [    ] N. Otsu , IEEE Transactions Systems , Man , Cybernetics , vol .   , .   , pp .   –   ,      . [    ] S. Stein S. J. McKenna , ACM International Joint Conference Pervasive Ubiquitous Computing , pp.   –    ,      . 